{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"Heart_Disease_Prediction.xls\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Chest pain type</th>\n",
       "      <th>BP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>FBS over 120</th>\n",
       "      <th>EKG results</th>\n",
       "      <th>Max HR</th>\n",
       "      <th>Exercise angina</th>\n",
       "      <th>ST depression</th>\n",
       "      <th>Slope of ST</th>\n",
       "      <th>Number of vessels fluro</th>\n",
       "      <th>Thallium</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>270.000000</td>\n",
       "      <td>270.000000</td>\n",
       "      <td>270.000000</td>\n",
       "      <td>270.000000</td>\n",
       "      <td>270.000000</td>\n",
       "      <td>270.000000</td>\n",
       "      <td>270.000000</td>\n",
       "      <td>270.000000</td>\n",
       "      <td>270.000000</td>\n",
       "      <td>270.00000</td>\n",
       "      <td>270.000000</td>\n",
       "      <td>270.000000</td>\n",
       "      <td>270.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>54.433333</td>\n",
       "      <td>0.677778</td>\n",
       "      <td>3.174074</td>\n",
       "      <td>131.344444</td>\n",
       "      <td>249.659259</td>\n",
       "      <td>0.148148</td>\n",
       "      <td>1.022222</td>\n",
       "      <td>149.677778</td>\n",
       "      <td>0.329630</td>\n",
       "      <td>1.05000</td>\n",
       "      <td>1.585185</td>\n",
       "      <td>0.670370</td>\n",
       "      <td>4.696296</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>9.109067</td>\n",
       "      <td>0.468195</td>\n",
       "      <td>0.950090</td>\n",
       "      <td>17.861608</td>\n",
       "      <td>51.686237</td>\n",
       "      <td>0.355906</td>\n",
       "      <td>0.997891</td>\n",
       "      <td>23.165717</td>\n",
       "      <td>0.470952</td>\n",
       "      <td>1.14521</td>\n",
       "      <td>0.614390</td>\n",
       "      <td>0.943896</td>\n",
       "      <td>1.940659</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>29.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>94.000000</td>\n",
       "      <td>126.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>48.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>120.000000</td>\n",
       "      <td>213.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>133.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>55.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>130.000000</td>\n",
       "      <td>245.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>153.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.80000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>61.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>140.000000</td>\n",
       "      <td>280.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>166.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.60000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>7.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>77.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>564.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>202.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>6.20000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>7.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Age         Sex  Chest pain type          BP  Cholesterol  \\\n",
       "count  270.000000  270.000000       270.000000  270.000000   270.000000   \n",
       "mean    54.433333    0.677778         3.174074  131.344444   249.659259   \n",
       "std      9.109067    0.468195         0.950090   17.861608    51.686237   \n",
       "min     29.000000    0.000000         1.000000   94.000000   126.000000   \n",
       "25%     48.000000    0.000000         3.000000  120.000000   213.000000   \n",
       "50%     55.000000    1.000000         3.000000  130.000000   245.000000   \n",
       "75%     61.000000    1.000000         4.000000  140.000000   280.000000   \n",
       "max     77.000000    1.000000         4.000000  200.000000   564.000000   \n",
       "\n",
       "       FBS over 120  EKG results      Max HR  Exercise angina  ST depression  \\\n",
       "count    270.000000   270.000000  270.000000       270.000000      270.00000   \n",
       "mean       0.148148     1.022222  149.677778         0.329630        1.05000   \n",
       "std        0.355906     0.997891   23.165717         0.470952        1.14521   \n",
       "min        0.000000     0.000000   71.000000         0.000000        0.00000   \n",
       "25%        0.000000     0.000000  133.000000         0.000000        0.00000   \n",
       "50%        0.000000     2.000000  153.500000         0.000000        0.80000   \n",
       "75%        0.000000     2.000000  166.000000         1.000000        1.60000   \n",
       "max        1.000000     2.000000  202.000000         1.000000        6.20000   \n",
       "\n",
       "       Slope of ST  Number of vessels fluro    Thallium  \n",
       "count   270.000000               270.000000  270.000000  \n",
       "mean      1.585185                 0.670370    4.696296  \n",
       "std       0.614390                 0.943896    1.940659  \n",
       "min       1.000000                 0.000000    3.000000  \n",
       "25%       1.000000                 0.000000    3.000000  \n",
       "50%       2.000000                 0.000000    3.000000  \n",
       "75%       2.000000                 1.000000    7.000000  \n",
       "max       3.000000                 3.000000    7.000000  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(270, 14)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Age                          int64\n",
       "Sex                          int64\n",
       "Chest pain type              int64\n",
       "BP                           int64\n",
       "Cholesterol                  int64\n",
       "FBS over 120                 int64\n",
       "EKG results                  int64\n",
       "Max HR                       int64\n",
       "Exercise angina              int64\n",
       "ST depression              float64\n",
       "Slope of ST                  int64\n",
       "Number of vessels fluro      int64\n",
       "Thallium                     int64\n",
       "Heart Disease               object\n",
       "dtype: object"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Chest pain type</th>\n",
       "      <th>BP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>FBS over 120</th>\n",
       "      <th>EKG results</th>\n",
       "      <th>Max HR</th>\n",
       "      <th>Exercise angina</th>\n",
       "      <th>ST depression</th>\n",
       "      <th>Slope of ST</th>\n",
       "      <th>Number of vessels fluro</th>\n",
       "      <th>Thallium</th>\n",
       "      <th>Heart Disease</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>130</td>\n",
       "      <td>322</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>109</td>\n",
       "      <td>0</td>\n",
       "      <td>2.4</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>Presence</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>67</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>115</td>\n",
       "      <td>564</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>160</td>\n",
       "      <td>0</td>\n",
       "      <td>1.6</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>Absence</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>57</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>124</td>\n",
       "      <td>261</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141</td>\n",
       "      <td>0</td>\n",
       "      <td>0.3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>Presence</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>64</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>128</td>\n",
       "      <td>263</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>105</td>\n",
       "      <td>1</td>\n",
       "      <td>0.2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>Absence</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>74</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>120</td>\n",
       "      <td>269</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>121</td>\n",
       "      <td>1</td>\n",
       "      <td>0.2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Absence</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age  Sex  Chest pain type   BP  Cholesterol  FBS over 120  EKG results  \\\n",
       "0   70    1                4  130          322             0            2   \n",
       "1   67    0                3  115          564             0            2   \n",
       "2   57    1                2  124          261             0            0   \n",
       "3   64    1                4  128          263             0            0   \n",
       "4   74    0                2  120          269             0            2   \n",
       "\n",
       "   Max HR  Exercise angina  ST depression  Slope of ST  \\\n",
       "0     109                0            2.4            2   \n",
       "1     160                0            1.6            2   \n",
       "2     141                0            0.3            1   \n",
       "3     105                1            0.2            2   \n",
       "4     121                1            0.2            1   \n",
       "\n",
       "   Number of vessels fluro  Thallium Heart Disease  \n",
       "0                        3         3      Presence  \n",
       "1                        0         7       Absence  \n",
       "2                        0         7      Presence  \n",
       "3                        1         7       Absence  \n",
       "4                        1         3       Absence  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Age                        0\n",
       "Sex                        0\n",
       "Chest pain type            0\n",
       "BP                         0\n",
       "Cholesterol                0\n",
       "FBS over 120               0\n",
       "EKG results                0\n",
       "Max HR                     0\n",
       "Exercise angina            0\n",
       "ST depression              0\n",
       "Slope of ST                0\n",
       "Number of vessels fluro    0\n",
       "Thallium                   0\n",
       "Heart Disease              0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Age', 'Sex', 'Chest pain type', 'BP', 'Cholesterol', 'FBS over 120',\n",
       "       'EKG results', 'Max HR', 'Exercise angina', 'ST depression',\n",
       "       'Slope of ST', 'Number of vessels fluro', 'Thallium', 'Heart Disease'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sex                          2\n",
      "Chest pain type              4\n",
      "BP                          47\n",
      "Cholesterol                144\n",
      "FBS over 120                 2\n",
      "EKG results                  3\n",
      "Max HR                      90\n",
      "Exercise angina              2\n",
      "ST depression               39\n",
      "Slope of ST                  3\n",
      "Number of vessels fluro      4\n",
      "Thallium                     3\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "col=[ 'Sex', 'Chest pain type', 'BP', 'Cholesterol', 'FBS over 120',\n",
    "       'EKG results', 'Max HR', 'Exercise angina', 'ST depression',\n",
    "       'Slope of ST', 'Number of vessels fluro', 'Thallium']\n",
    "print(df[col].nunique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1    183\n",
      "0     87\n",
      "Name: Sex, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(df[\"Sex\"].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3    152\n",
      "7    104\n",
      "6     14\n",
      "Name: Thallium, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(df[\"Thallium\"].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4    129\n",
      "3     79\n",
      "2     42\n",
      "1     20\n",
      "Name: Chest pain type, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(df[\"Chest pain type\"].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2    137\n",
      "0    131\n",
      "1      2\n",
      "Name: EKG results, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(df[\"EKG results\"].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    230\n",
      "1     40\n",
      "Name: FBS over 120, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(df[\"FBS over 120\"].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    181\n",
      "1     89\n",
      "Name: Exercise angina, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(df[\"Exercise angina\"].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1    130\n",
      "2    122\n",
      "3     18\n",
      "Name: Slope of ST, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(df[\"Slope of ST\"].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    160\n",
      "1     58\n",
      "2     33\n",
      "3     19\n",
      "Name: Number of vessels fluro, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(df[\"Number of vessels fluro\"].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Sex', ylabel='count'>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#c=['Age', 'Sex', 'Chest pain type', 'BP', 'Cholesterol', 'FBS over 120',\n",
    "      # 'EKG results', 'Max HR', 'Exercise angina', 'ST depression',\n",
    "       #'Slope of ST', 'Number of vessels fluro', 'Thallium']\n",
    "\n",
    "#for i in c:\n",
    "sns.countplot(x=\"Sex\",hue=\"Heart Disease\",data=df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x14c2df35d30>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.catplot(x=\"Heart Disease\",y=\"Age\",data=df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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gBUrVrBu3TpSU1NZsmQJEydOZMGCBXHV0rFjR959993j1k+YMIFXXnmF5s2b88UXXwDwzDPPcNZZZ/H222/z9ddf0717d/r27cv555/PnDlzaNSoEbt37+byyy9n4MCBvPzyy5x33nksXLgQgH379lFYWMjo0aOZN28eaWlpzJgxg1/+8pc8++yz3+I7KlESWvC7+zKgoksKeod1XImG+vXrs2bNmtLlqVOnkpeXB8CiRYvYuHFj6Wv79+/nwIED7Nu3j5ycHDZv3oyZUVhYWLpNnz59SE1NrVIt7l7u+u7duzN8+HBuvPFGBg8eDMCrr77KunXrmDVrFhAL8s2bN9OiRQvuu+8+li5dSq1atfj000/ZuXMnGRkZjB07lp///Odcc8019OzZkw0bNrBhwwb69OkDxN5FNGvWrEq1SzTpzl2pcYqLi1mxYgX169c/av3o0aO58sormTNnDlu2bOGKK64ofe2MM86o8vFWr15NmzZtjls/efJkVq5cycKFC8nKymLNmjW4O08++ST9+vU7atupU6dSUFDAqlWrSElJIT09ncOHD3PxxRezatUq/v73v/OLX/yCvn37cv3113PppZeyYsWKKtcs0aaxeqTG6du3L3/84x9Ll0veGezbt4/mzZsDsaCtSMOGDTlw4EBcx9qyZQtjx45l9OjRx7324YcfctlllzFhwgSaNGnCJ598Qr9+/Xj66adL3228//77fPnll+zbt4+mTZuSkpLCP/7xD7Zu3QrAZ599RoMGDbjlllsYO3Ys+fn5XHLJJRQUFJQGf2FhIe+8805c9YqAzvilBnriiSe48847ad++PUVFRfTq1YvJkyfzs5/9jJycHCZNmsRVV11V4f7t27enTp06ZGZmMnz4cO69996jXv/www/p0KEDhw8fpmHDhowePZoRI0Yc1864cePYvHkz7k7v3r3JzMykffv2bNmyhY4dO+LupKWlMXfuXH74wx9y7bXXkp2dTVZWFq1btwZg/fr1jBs3jlq1apGSksLTTz9N3bp1mTVrFnfffTf79u2jqKiIMWPGcOmll57ab6TUWFZR/+TpJDs720v6b0+m07hpIVdz6s1p+GiyS6iUC369PmHH2rRpU7ndKBK/RH0P9buXGJX5/TOzVe6efex6dfWIiESMgl9EJGIU/CIiEaPgFxGJGAW/iEjEKPhFRCJG1/FLtXKqLxlc9ehtJ92mdu3aZGRkUFRURJs2bcjNzaVBgwantA6RRNIZv8hJlIwLtGHDBurWrcvkyZOPev3IkSNJqkykahT8IpXQs2dPPvjgA5YsWcKVV17JzTffTEZGRoXDLe/YsYNevXqRlZVFu3bteOONN4DYYG1du3alY8eODB06lIMHDwKQnp7O/fffXzo8c8monwcPHmTEiBFkZGTQvn370lFFK2pH5EQU/CJxKioq4qWXXiIjIwOIje//29/+lo0bNx413PLbb7/Nn//8Zz7++GOef/55+vXrx5o1a1i7di1ZWVns3r2bBx98kEWLFpGfn092djaTJn3zyIomTZqQn5/PHXfcwcSJEwF44IEHOOuss1i/fj3r1q3jqquuOmk7IhVRH7/ISZQd+79nz56MHDmSN998ky5dutCyZUug4uGWO3fuzI9+9CMKCwsZNGgQWVlZ/POf/2Tjxo10794dgH/961907dq19HglQzh36tSJ2bNjD65btGgRf/vb30q3ady4MQsWLDhhOyIVCS34zexZ4Bpgl7u3C9alAjOAdGALcKO7fx5WDSKnwrFj/5coO5RzRcMtAyxdupSFCxdy6623Mm7cOBo3bkyfPn2YPn16ucf7zne+A8Q+VC4qKiptP/ZQu2+4+wnbEalImF09U4H+x6wbDyx291bA4mBZpNqraLjlrVu30rRpU3784x8zcuRI8vPzufzyy1m+fDkffPABAIcOHeL9998/YfvHDjX9+eefV6kdEQj3CVxLzSz9mNXXAVcE87nAEuDnYdUgNU88l18mw+23317ucMtLlizh0UcfJSUlhTPPPJNp06aRlpbG1KlTuemmm/j6668BePDBB7n44osrbP9Xv/oVd955J+3ataN27drcf//9DB48uNLtiEDIwzIHwb+gTFfPF+5+dpnXP3f3xhXsOwoYBXDBBRd0KnkwxcloaNjwaVjm6kXDMlesuv3uQQ0fltndp7h7trtnp6WlJbscEZEaI9HBv9PMmgEE010JPr6ISOQlOvjnAznBfA4wL8HHFxGJvNCC38ymAyuAS8xsu5mNBB4G+pjZZqBPsCwiIgkU5lU9N1XwUu+wjikiIid32n64KyIi4dCQDVKtbJuQcUrbi/fSuDlz5jB48GA2bdpE69atWbJkCRMnTmTBggWntB6RRNAZv0gcpk+fTo8ePY4aL0ekulLwi5zEwYMHWb58Oc8888xRwb9//36uv/562rZty09+8hOKi4s5cuQIw4cPp127dmRkZPDYY48B8OGHH9K/f386depEz549S4dbHj58OHfffTfdunXjwgsvLB3kDeCRRx4hIyODzMxMxo8ff8J2RCpDXT0iJzF37lz69+/PxRdfTGpqKvn5+UBsWOaNGzfyve99j/79+zN79mxatmzJp59+yoYNGwD44osvABg1ahSTJ0+mVatWrFy5kp/+9Ke8/vrrQGzM/mXLlvHuu+8ycOBAbrjhBl566SXmzp3LypUradCgAXv37j1pOyLxUvCLnMT06dMZM2YMAMOGDWP69OkMGDCALl26cOGFFwJw0003sWzZMnr37s1HH33E6NGjGTBgAH379uXgwYO8+eabDB06tLTNkrF1AAYNGkStWrVo27YtO3fuBGLDMI8YMaL0EY+pqaknbUckXgp+kRPYs2cPr7/+Ohs2bMDMOHLkCGbG1VdffdwwyWZG48aNWbt2La+88gpPPfUUM2fO5A9/+ANnn312uUM7wzfDMENsqOWS6bHtFxcXn7AdkXipj1/kBGbNmsVtt93G1q1b2bJlC5988gktW7Zk2bJlvPXWW3z88ccUFxczY8YMevTowe7duykuLmbIkCE88MAD5Ofn06hRI1q2bMkLL7wAxEJ97dq1Jzxu3759efbZZzl06BAAe/furVI7IuXRGb9UK4kcGRRi3TwlH6yWGDJkCE8//TRdu3Zl/PjxrF+/nl69enH99dezfv16RowYQXFxMQAPPfQQAM899xx33HEHDz74IIWFhQwbNozMzMwKj9u/f3/WrFlDdnY2devW5eqrr+Z3v/tdpdsRKU+owzKfKtnZ2Z6XlxfXthoaNnwalrl60bDMFatuv3tQw4dlFhGRcCj4RUQiRsEvp73q0B15utL3Tsqj4JfTWr169dizZ48CrArcnT179lCvXr1klyKnGV3VI6e1Fi1asH37dgoKCpJdSrVUr149WrRokewy5DSj4JfTWkpKCi1btkx2GSI1SlKC38z6A48DtYG/uLuexCVA9bsksKZfDig1U8L7+M2sNvAU8G9AW+AmM2ub6DpERKIqGR/udgE+cPeP3P1fwN+A65JQh4hIJCX8zl0zuwHo7+63B8u3Ape5+13HbDcKGBUsXgK8l9BCE6sJsDvZRUiV6GdXvdX0n9/33D3t2JXJ6OO3ctYd99fH3acAU8IvJ/nMLK+826rl9KefXfUW1Z9fMrp6tgPnl1luAXyWhDpERCIpGcH/NtDKzFqaWV1gGDA/CXWIiERSwrt63L3IzO4CXiF2Oeez7v5Oous4zUSiS6uG0s+ueovkz69aDMssIiKnjsbqERGJGAW/iEjEKPiTyMz6m9l7ZvaBmY0/+R5yujCzZ81sl5ltSHYtUnlmdr6Z/cPMNpnZO2Z2T7JrSiT18SdJMHTF+0AfYpe4vg3c5O4bk1qYxMXMegEHgWnu3i7Z9UjlmFkzoJm755tZQ2AVMCgqv386408eDV1Rjbn7UmBvsuuQqnH3He6eH8wfADYBzZNbVeIo+JOnOfBJmeXtROg/nsjpwszSgQ7AyiSXkjAK/uSJa+gKEQmPmZ0JvAiMcff9ya4nURT8yaOhK0SSyMxSiIX+c+4+O9n1JJKCP3k0dIVIkpiZAc8Am9x9UrLrSTQFf5K4exFQMnTFJmCmhq6oPsxsOrACuMTMtpvZyGTXJJXSHbgVuMrM1gRfVye7qETR5ZwiIhGjM34RkYhR8IuIRIyCX0QkYhT8IiIRo+AXEYkYBb/UOGZ2pMwlemtKRj41syVmlh3Mp5vZZjPrFyx3CV7fbGb5ZrbQzDISWHPZ2u5L1HElmhL+6EWRBPjK3bMqetHMWhC7f+I/3P0VMzsXmAnc7O5vBtv0AC4C1p+gnTrB/Rin2n3A70JoVwTQGb9Ez3eBV4FfuXvJndJ3AbkloQ/g7svcfe6xO5vZb8xsipm9CkwzszQze9HM3g6+ugfbfb/MO47VZtbQzK4wswVl2vqjmQ0/pv2HgfrBfs+Z2RnBu4+1ZrbBzP79VH9DJHp0xi81UX0zW1Nm+SF3nxHMTyMW+i+Uef1SILcS7XcCerj7V2b2PPCYuy8zswuIvZNoA4wF7nT35cFAYIfjadjdx5vZXSXvWMxsCPCZuw8Ils+qRJ0i5VLwS010oq6eRcCtZjbV3Q+Vt4GZrQQaAa+6e3lPZprv7l8F8z8A2saGfgGgUfBgj+XAJDN7Dpjt7tvLbFMZ64GJZvZ7YIG7v1GVRkTKUlePRM0jxMZdf8HMSk583gE6lmzg7pcB/xuo6Oz6yzLztYCu7p4VfDV39wPu/jBwO1Af+H9m1hoo4ujfuXonK9bd3yf2DmM98JCZ/Tqef6TIiSj4JYruBfYDzwSjND4FDDezbmW2aRBnW68S+4wAADPLCqYXuft6d/89kAe0BrYSe3fwnaDLpncFbRYGQwZjZucBh9z9v4CJlPkDJVJV6uqRmujYPv6X3b30Yfbu7maWAywAHnH3ccGHpr83s+bALmA3MCGOY90NPGVm64j9Pi0FfgKMMbMrgSPARuAld//azGYC64DNwOoK2pwCrDOzfGKfSTxqZsVAIXBHfN8CkYppdE4RkYhRV4+ISMQo+EVEIkbBLyISMQp+EZGIUfCLiESMgl9EJGIU/CIiEfP/Ae5UVdMqpJaaAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "c=[\"FBS over 120\",\"Chest pain type\",\"EKG results\",\"Exercise angina\",\n",
    "       'Slope of ST', 'Number of vessels fluro', 'Thallium']\n",
    "for i in c:\n",
    "    sns.countplot(x=i,hue=\"Heart Disease\",data=df)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.loc[df[\"ST depression\"]>4,'ST depression']=np.mean(df[\"ST depression\"])\n",
    "df.loc[df[\"BP\"]>170,'BP']=np.mean(df[\"BP\"])\n",
    "df.loc[df[\"Cholesterol\"]>380,'Cholesterol']=np.mean(df[\"Cholesterol\"])\n",
    "df.loc[df[\"Max HR\"]<90,\"Max HR\"]=np.mean(df[\"Max HR\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "f=[\"ST depression\",\"Max HR\",\"Cholesterol\",\"BP\"]\n",
    "for i in f:\n",
    "    df.boxplot(column=i)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "categorical_features=[\"Sex\",\"Chest pain type\",\"FBS over 120\",\"EKG results\",\"Exercise angina\",\"Slope of ST\",\"Number of vessels fluro\",\"Thallium\"]\n",
    "\n",
    "df[categorical_features]=df[categorical_features].astype(str)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "df[\"Heart Disease\"]=df[\"Heart Disease\"].replace(['Presence'],'1')\n",
    "\n",
    "df[\"Heart Disease\"]=df[\"Heart Disease\"].replace(['Absence'],'0')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-26-5b518d76a08d>:3: UserWarning: To output multiple subplots, the figure containing the passed axes is being cleared\n",
      "  df.hist(ax=ax)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([[<AxesSubplot:title={'center':'Age'}>,\n",
       "        <AxesSubplot:title={'center':'BP'}>],\n",
       "       [<AxesSubplot:title={'center':'Cholesterol'}>,\n",
       "        <AxesSubplot:title={'center':'Max HR'}>],\n",
       "       [<AxesSubplot:title={'center':'ST depression'}>, <AxesSubplot:>]],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x1440 with 6 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig=plt.figure(figsize=(15,20))\n",
    "ax=fig.gca()\n",
    "df.hist(ax=ax)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "label=df[\"Heart Disease\"]\n",
    "df.drop(\"Heart Disease\",axis=1,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Age                          int64\n",
       "Sex                         object\n",
       "Chest pain type             object\n",
       "BP                         float64\n",
       "Cholesterol                float64\n",
       "FBS over 120                object\n",
       "EKG results                 object\n",
       "Max HR                     float64\n",
       "Exercise angina             object\n",
       "ST depression              float64\n",
       "Slope of ST                 object\n",
       "Number of vessels fluro     object\n",
       "Thallium                    object\n",
       "dtype: object"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "categorical_features=[\"Sex\",\"Chest pain type\",\"FBS over 120\",\"EKG results\",\"Exercise angina\",\"Slope of ST\",\"Number of vessels fluro\",\"Thallium\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "continuous_features=set(df.columns)-set(categorical_features)\n",
    "scaler=StandardScaler()\n",
    "df_norm=df.copy()\n",
    "df_norm[list(continuous_features)]=scaler.fit_transform(df[list(continuous_features)])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "category_col =['Sex', 'Chest pain type', 'FBS over 120', 'EKG results', 'Exercise angina', \n",
    "               'Slope of ST', 'Number of vessels fluro', 'Thallium']  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "labelEncoder = preprocessing.LabelEncoder() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'Sex': {'0': 0, '1': 1}, 'Chest pain type': {'1': 0, '2': 1, '3': 2, '4': 3}, 'FBS over 120': {'0': 0, '1': 1}, 'EKG results': {'0': 0, '1': 1, '2': 2}, 'Exercise angina': {'0': 0, '1': 1}, 'Slope of ST': {'1': 0, '2': 1, '3': 2}, 'Number of vessels fluro': {'0': 0, '1': 1, '2': 2, '3': 3}, 'Thallium': {'3': 0, '6': 1, '7': 2}}\n"
     ]
    }
   ],
   "source": [
    "mapping_dict ={} \n",
    "for col in category_col: \n",
    "    df[col] = labelEncoder.fit_transform(df[col]) \n",
    "  \n",
    "    le_name_mapping = dict(zip(labelEncoder.classes_, \n",
    "                        labelEncoder.transform(labelEncoder.classes_))) \n",
    "  \n",
    "    mapping_dict[col]= le_name_mapping \n",
    "print(mapping_dict) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <td>1.71209</td>\n",
       "      <td>1.38214</td>\n",
       "      <td>0.282294</td>\n",
       "      <td>1.05219</td>\n",
       "      <td>2.15203</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sex</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chest pain type</th>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BP</th>\n",
       "      <td>0.0217732</td>\n",
       "      <td>-0.970145</td>\n",
       "      <td>-0.374994</td>\n",
       "      <td>-0.110483</td>\n",
       "      <td>-0.639505</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cholesterol</th>\n",
       "      <td>1.73206</td>\n",
       "      <td>0.0797483</td>\n",
       "      <td>0.338779</td>\n",
       "      <td>0.38446</td>\n",
       "      <td>0.521505</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FBS over 120</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>EKG results</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Max HR</th>\n",
       "      <td>-1.84727</td>\n",
       "      <td>0.439531</td>\n",
       "      <td>-0.412413</td>\n",
       "      <td>-2.02662</td>\n",
       "      <td>-1.3092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Exercise angina</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ST depression</th>\n",
       "      <td>1.37221</td>\n",
       "      <td>0.593242</td>\n",
       "      <td>-0.672581</td>\n",
       "      <td>-0.769952</td>\n",
       "      <td>-0.769952</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Slope of ST</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Number of vessels fluro</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Thallium</th>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                 0          1         2         3         4\n",
       "Age                        1.71209    1.38214  0.282294   1.05219   2.15203\n",
       "Sex                              1          0         1         1         0\n",
       "Chest pain type                  4          3         2         4         2\n",
       "BP                       0.0217732  -0.970145 -0.374994 -0.110483 -0.639505\n",
       "Cholesterol                1.73206  0.0797483  0.338779   0.38446  0.521505\n",
       "FBS over 120                     0          0         0         0         0\n",
       "EKG results                      2          2         0         0         2\n",
       "Max HR                    -1.84727   0.439531 -0.412413  -2.02662   -1.3092\n",
       "Exercise angina                  0          0         0         1         1\n",
       "ST depression              1.37221   0.593242 -0.672581 -0.769952 -0.769952\n",
       "Slope of ST                      2          2         1         2         1\n",
       "Number of vessels fluro          3          0         0         1         1\n",
       "Thallium                         3          7         7         7         3"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_norm.head().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <td>1.71209</td>\n",
       "      <td>1.38214</td>\n",
       "      <td>0.282294</td>\n",
       "      <td>1.05219</td>\n",
       "      <td>2.15203</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sex</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chest pain type</th>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BP</th>\n",
       "      <td>0.0217732</td>\n",
       "      <td>-0.970145</td>\n",
       "      <td>-0.374994</td>\n",
       "      <td>-0.110483</td>\n",
       "      <td>-0.639505</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cholesterol</th>\n",
       "      <td>1.73206</td>\n",
       "      <td>0.0797483</td>\n",
       "      <td>0.338779</td>\n",
       "      <td>0.38446</td>\n",
       "      <td>0.521505</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FBS over 120</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>EKG results</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Max HR</th>\n",
       "      <td>-1.84727</td>\n",
       "      <td>0.439531</td>\n",
       "      <td>-0.412413</td>\n",
       "      <td>-2.02662</td>\n",
       "      <td>-1.3092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Exercise angina</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ST depression</th>\n",
       "      <td>1.37221</td>\n",
       "      <td>0.593242</td>\n",
       "      <td>-0.672581</td>\n",
       "      <td>-0.769952</td>\n",
       "      <td>-0.769952</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Slope of ST</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Number of vessels fluro</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Thallium</th>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                 0          1         2         3         4\n",
       "Age                        1.71209    1.38214  0.282294   1.05219   2.15203\n",
       "Sex                              1          0         1         1         0\n",
       "Chest pain type                  4          3         2         4         2\n",
       "BP                       0.0217732  -0.970145 -0.374994 -0.110483 -0.639505\n",
       "Cholesterol                1.73206  0.0797483  0.338779   0.38446  0.521505\n",
       "FBS over 120                     0          0         0         0         0\n",
       "EKG results                      2          2         0         0         2\n",
       "Max HR                    -1.84727   0.439531 -0.412413  -2.02662   -1.3092\n",
       "Exercise angina                  0          0         0         1         1\n",
       "ST depression              1.37221   0.593242 -0.672581 -0.769952 -0.769952\n",
       "Slope of ST                      2          2         1         2         1\n",
       "Number of vessels fluro          3          0         0         1         1\n",
       "Thallium                         3          7         7         7         3"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_norm.head().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(270, 13)"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_norm.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2160x1440 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplots(figsize=(30,20))\n",
    "sns.heatmap(df_norm.corr(),annot=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Chest pain type</th>\n",
       "      <th>BP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>FBS over 120</th>\n",
       "      <th>EKG results</th>\n",
       "      <th>Max HR</th>\n",
       "      <th>Exercise angina</th>\n",
       "      <th>ST depression</th>\n",
       "      <th>Slope of ST</th>\n",
       "      <th>Number of vessels fluro</th>\n",
       "      <th>Thallium</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.712094</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0.021773</td>\n",
       "      <td>1.732063</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>-1.847266</td>\n",
       "      <td>0</td>\n",
       "      <td>1.372210</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.382140</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>-0.970145</td>\n",
       "      <td>0.079748</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.439531</td>\n",
       "      <td>0</td>\n",
       "      <td>0.593242</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.282294</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>-0.374994</td>\n",
       "      <td>0.338779</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.412413</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.672581</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.052186</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>-0.110483</td>\n",
       "      <td>0.384460</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-2.026622</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.769952</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2.152032</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>-0.639505</td>\n",
       "      <td>0.521505</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>-1.309196</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.769952</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>265</th>\n",
       "      <td>-0.267629</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.110678</td>\n",
       "      <td>-1.077346</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.529209</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.477839</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>266</th>\n",
       "      <td>-1.147506</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>-0.639505</td>\n",
       "      <td>0.384460</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.022440</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.964694</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>267</th>\n",
       "      <td>0.172309</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.683052</td>\n",
       "      <td>1.092523</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.125657</td>\n",
       "      <td>0</td>\n",
       "      <td>0.301129</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>268</th>\n",
       "      <td>0.282294</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0.683052</td>\n",
       "      <td>-1.237231</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.098539</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.575210</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>269</th>\n",
       "      <td>1.382140</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>2.005609</td>\n",
       "      <td>0.909797</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>-1.892105</td>\n",
       "      <td>1</td>\n",
       "      <td>0.495871</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>270 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          Age Sex Chest pain type        BP  Cholesterol FBS over 120  \\\n",
       "0    1.712094   1               4  0.021773     1.732063            0   \n",
       "1    1.382140   0               3 -0.970145     0.079748            0   \n",
       "2    0.282294   1               2 -0.374994     0.338779            0   \n",
       "3    1.052186   1               4 -0.110483     0.384460            0   \n",
       "4    2.152032   0               2 -0.639505     0.521505            0   \n",
       "..        ...  ..             ...       ...          ...          ...   \n",
       "265 -0.267629   1               3  0.110678    -1.077346            1   \n",
       "266 -1.147506   1               2 -0.639505     0.384460            0   \n",
       "267  0.172309   0               2  0.683052     1.092523            0   \n",
       "268  0.282294   1               4  0.683052    -1.237231            0   \n",
       "269  1.382140   1               4  2.005609     0.909797            0   \n",
       "\n",
       "    EKG results    Max HR Exercise angina  ST depression Slope of ST  \\\n",
       "0             2 -1.847266               0       1.372210           2   \n",
       "1             2  0.439531               0       0.593242           2   \n",
       "2             0 -0.412413               0      -0.672581           1   \n",
       "3             0 -2.026622               1      -0.769952           2   \n",
       "4             2 -1.309196               1      -0.769952           1   \n",
       "..          ...       ...             ...            ...         ...   \n",
       "265           0  0.529209               0      -0.477839           1   \n",
       "266           0  1.022440               0      -0.964694           1   \n",
       "267           2  0.125657               0       0.301129           2   \n",
       "268           0 -0.098539               0      -0.575210           2   \n",
       "269           2 -1.892105               1       0.495871           2   \n",
       "\n",
       "    Number of vessels fluro Thallium  \n",
       "0                         3        3  \n",
       "1                         0        7  \n",
       "2                         0        7  \n",
       "3                         1        7  \n",
       "4                         1        3  \n",
       "..                      ...      ...  \n",
       "265                       0        7  \n",
       "266                       0        7  \n",
       "267                       0        3  \n",
       "268                       0        6  \n",
       "269                       3        3  \n",
       "\n",
       "[270 rows x 13 columns]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_norm\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "y = label\n",
    "X = df_norm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Age', 'Sex', 'Chest pain type', 'BP', 'Cholesterol', 'FBS over 120',\n",
       "       'EKG results', 'Max HR', 'Exercise angina', 'ST depression',\n",
       "       'Slope of ST', 'Number of vessels fluro', 'Thallium'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Chest pain type</th>\n",
       "      <th>BP</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>FBS over 120</th>\n",
       "      <th>EKG results</th>\n",
       "      <th>Max HR</th>\n",
       "      <th>Exercise angina</th>\n",
       "      <th>ST depression</th>\n",
       "      <th>Slope of ST</th>\n",
       "      <th>Number of vessels fluro</th>\n",
       "      <th>Thallium</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.712094</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0.021773</td>\n",
       "      <td>1.732063</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>-1.847266</td>\n",
       "      <td>0</td>\n",
       "      <td>1.372210</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.382140</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>-0.970145</td>\n",
       "      <td>0.079748</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.439531</td>\n",
       "      <td>0</td>\n",
       "      <td>0.593242</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.282294</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>-0.374994</td>\n",
       "      <td>0.338779</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.412413</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.672581</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.052186</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>-0.110483</td>\n",
       "      <td>0.384460</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-2.026622</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.769952</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2.152032</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>-0.639505</td>\n",
       "      <td>0.521505</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>-1.309196</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.769952</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Age Sex Chest pain type        BP  Cholesterol FBS over 120  \\\n",
       "0  1.712094   1               4  0.021773     1.732063            0   \n",
       "1  1.382140   0               3 -0.970145     0.079748            0   \n",
       "2  0.282294   1               2 -0.374994     0.338779            0   \n",
       "3  1.052186   1               4 -0.110483     0.384460            0   \n",
       "4  2.152032   0               2 -0.639505     0.521505            0   \n",
       "\n",
       "  EKG results    Max HR Exercise angina  ST depression Slope of ST  \\\n",
       "0           2 -1.847266               0       1.372210           2   \n",
       "1           2  0.439531               0       0.593242           2   \n",
       "2           0 -0.412413               0      -0.672581           1   \n",
       "3           0 -2.026622               1      -0.769952           2   \n",
       "4           2 -1.309196               1      -0.769952           1   \n",
       "\n",
       "  Number of vessels fluro Thallium  \n",
       "0                       3        3  \n",
       "1                       0        7  \n",
       "2                       0        7  \n",
       "3                       1        7  \n",
       "4                       1        3  "
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    1\n",
       "1    0\n",
       "2    1\n",
       "3    0\n",
       "4    0\n",
       "Name: Heart Disease, dtype: object"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.neighbors import KNeighborsClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import cross_val_score\n",
    "knn_scores = []\n",
    "for k in range(1,21):\n",
    "    knn_classifier = KNeighborsClassifier(n_neighbors = k)\n",
    "    score=cross_val_score(knn_classifier,X,y,cv=10)\n",
    "    knn_scores.append(score.mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'K Neighbors Classifier scores for different K values')"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot([k for k in range(1, 21)], knn_scores, color = 'red')\n",
    "for i in range(1,21):\n",
    "    plt.text(i, knn_scores[i-1], (i, knn_scores[i-1]))\n",
    "plt.xticks([i for i in range(1, 21)])\n",
    "plt.xlabel('Number of Neighbors (K)')\n",
    "plt.ylabel('Scores')\n",
    "plt.title('K Neighbors Classifier scores for different K values')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "knn_classifier = KNeighborsClassifier(n_neighbors = 11)\n",
    "score=cross_val_score(knn_classifier,X,y,cv=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8222222222222223"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "score.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.8777777777777778\n"
     ]
    }
   ],
   "source": [
    "from sklearn.svm import SVC\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "clf = SVC(kernel='linear')\n",
    "clf.fit(X,y)\n",
    "y_pred = clf.predict(X_test)\n",
    "print(accuracy_score(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier()"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "classifier = RandomForestClassifier(n_estimators = 100)\n",
    "classifier.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.8\n"
     ]
    }
   ],
   "source": [
    "y_pred = classifier.predict(X_test)\n",
    "print(accuracy_score(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import ExtraTreesClassifier "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "extra_tree_forest = ExtraTreesClassifier() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ExtraTreesClassifier()"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "extra_tree_forest.fit(X, y) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.06901095 0.04603647 0.11190905 0.06461048 0.06616021 0.02180878\n",
      " 0.0375952  0.07889291 0.0691376  0.08373168 0.0604657  0.12628796\n",
      " 0.16435301]\n"
     ]
    }
   ],
   "source": [
    "print(extra_tree_forest.feature_importances_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "feat_importances = pd.Series(extra_tree_forest.feature_importances_, index=X.columns)\n",
    "feat_importances.nlargest(5).plot(kind='barh')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "predictions=classifier.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['1', '0', '0', '0', '0', '1', '1', '0', '0', '0', '0', '0', '1',\n",
       "       '1', '0', '0', '1', '0', '1', '0', '1', '0', '0', '0', '0', '1',\n",
       "       '0', '1', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1',\n",
       "       '1', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', '0', '0',\n",
       "       '0', '1', '0', '1', '0', '1', '0', '0', '1', '1', '1', '1', '1',\n",
       "       '0', '0', '1', '0', '0', '1', '0', '0', '0', '1', '0', '0', '0',\n",
       "       '0', '0', '0', '1', '0', '1', '1', '1', '0', '0', '1', '0'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predictions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x14c2f2d1670>"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(y_test,predictions)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle\n",
    "# open a file, where you ant to store the data\n",
    "file = open('heart_final.pkl', 'wb')\n",
    "\n",
    "# dump information to that file\n",
    "pickle.dump(clf, file)\n",
    "model = pickle.load(open('heart_final.pkl','rb'))\n",
    "#print(model.predict([[70,1,4,130,322,0,2,109,0,2.4,2,3,3]]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
